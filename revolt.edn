{
 ;; Tasks
 :pagora.revolt.task/aot    {:exclude-namespaces ["pagora.revolt." "revolt."]
                             :extra-namespaces [;; mount.core
                                                clojure.tools.reader.reader-types
                                                ;; clojure.tools.logging.impl
                                                ]}

 :pagora.revolt.task/write-info   {:path "resources/build-info.json"}

 :pagora.revolt.task/update-html {:src-path "resources/app-template.html"
                                  :dest-path "resources/app.html"

                                  :dev {:include-build-info-in-html false
                                        :path "app"
                                        :app-name "Pagora"}
                                  :prod {:include-build-info-in-html true
                                         :path "app"
                                         :app-name "pagora"
                                         ;;TODO load from env!!
                                         :bugsnag-api-key-frontend "3464720f5367914849487b96cb428fc8" ;anything but nil adds the bugsnag script tag in app.html
                                         :bugsnag-api-key-server "d87f64fd8593faed9e04f531efc6a082"}
                                  }

 ;;This should match the version in deps.edn!!!!!
 ;; :pagora.revolt.task/copy-newrelic-jar {:version "4.2.0"}
 
 :pagora.task/info   {:name "pagora-app"
                      :package pagora-app
                      :version "0.0.1"
                      :description "pagora app"}

 :revolt.task/test   {:report :pretty}

 :pagora.revolt.task/sass   {:source-path "src/styling/scss"
                             :output-path "public/app"}

 :pagora.revolt.task/assets {:assets-paths ["assets"]
                             :exclude-paths ["assets/app"]
                             :public-path "public/"
                             :gzip false
                             :update-with-exts ["html"]}

 :revolt.task/codox  {:source-paths ["src"]
                      :source-uri "http://github.com/mbuczko/revolt-edge/blob/{version}/{filepath}#L{line}"
                      :namespaces [edge.http
                                   edge.middleware]}

 :revolt.task/cljs   {:compiler {:output-dir "public/app/out"
                                 :asset-path "/app/out"
                                 ;; :preloads [devtools.preload]

                                 :parallel-build       true
                                 ;; :devcards             true
                                 :verbose              false
                                 :compiler-stats       true
                                 ;; :aot-cache            true
                                 :source-map-timestamp true

                                 ;; :npm-deps false
                                 ;; :install-deps true
                                 ;; :npm-deps {:xregexp "4.2.0"}

                                 ;; https://github.com/bhpagoraan/lein-figwheel/issues/88
                                 ;; :closure-defines {"goog.DEBUG" false}
                                 ;; :recompile-dependents false

                                 :pretty-print         true

                                 :fn-invoke-direct true

                                 ;; :pseudo-names true

                                 :main "app.frontend.core"
                                 :output-to "public/app/app.js"
                                 :infer-externs true
                                 :externs ["foreign-libs-externs.ext.js"
                                           "semantic-ui-react.ext.js"
                                           "cryptojs.ext.js"
                                           "moment.ext.js"
                                           "react.ext.js"
                                           "react-dom.ext.js"]
                                 :foreign-libs [
                                                ;; {:file "foreign-libs/bugsnag.js" :provides ["js.npm.bugsnag"]}
                                                ;; {:file "foreign-libs/dragula.js" :provides ["js.dragula"]}

                                                ;;unused
                                                ;; {:file "node_modules/cryptojs/lib/Crypto.js"
                                                ;;  :provides ["cryptojs.core"]}
                                                ;; {:file "node_modules/cryptojs/lib/MD5.js"
                                                ;;  :provides ["cryptojs.md5"]
                                                ;;  :requires ["cryptojs.core"]}

                                                ;;webpacked:
                                                {:file "foreign-libs/index.bundle.js"
                                                 :provides ["js.react"
                                                            "js.react-dom"
                                                            "js.moment"
                                                            "js.react-datetime"
                                                            "js.semantic-ui-react"
                                                            "js.ag-grid-react"]
                                                 :global-exports {js.react React
                                                                  js.react-dom ReactDOM
                                                                  js.moment moment
                                                                  js.react.datetime ReactDatetime
                                                                  js.semantic-ui-react semanticUIReact
                                                                  js.ag-grid-react AgGridReact
                                                                  }}]}
                      ;;Compiler config gets merged with each build
                      :builds [{:id "main"
                                :source-paths ["src/main" "src/frontend"]}]}

 :pagora.revolt.task/capsule {:exclude-paths #{"test" "src/frontend" "src/aum" "src/clj-utils" "src/revolt"}
                              ;; :aliases [:git-deps]
                              :name "app"
                              :package "pagora"
                              :version "0.1.0"
                              :output-jar "dist/app.jar"
                              :capsule-type :fat
                              :main "app.core"
                              :min-java-version "1.8.0"
                              :jvm-args "-server"
                              :system-properties "ENV=prod"
                              :caplets {"MavenCapsule" [["Repositories" "central clojars(https://repo.clojars.org/)"]
                                                        ["Allow-Snapshots" "true"]]}}

 ;; plugins

 :revolt.plugin/nrepl {:port 5600}
 :pagora.revolt.plugin/nrepl-piggieback {:port 5700}

 :revolt.plugin/rebel {:init-ns "clj.user"
                       :init-banner "Welcome to the rebel.\n"}

 :revolt.plugin/watch {:on-change {:pagora.revolt.task/sass "glob:src/styling/scss/*.*"
                                   ;; :revolt.task/test "glob:**/*.clj"
                                   }}

 :revolt.plugin/figwheel {:client-print-to [:console]
                          ;; :watch-dirs ["src/clj" "src-om" "src/frontend"]
                          ;; :npm {:bundles {"dist/index.bundle.js" "src/webpack/index.js"}}
                          :builds ["main"]}}
